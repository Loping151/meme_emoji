# 导入必要的模块
from datetime import datetime
from pathlib import Path

from PIL.Image import Image as IMG  # 导入PIL的Image类并重命名为IMG
from pil_utils import BuildImage  # 导入用于构建和操作图像的BuildImage类
from meme_generator.tags import MemeTags

from meme_generator import add_meme  # 导入添加meme模板的函数
from meme_generator.utils import save_gif  # 导入保存GIF的函数

# 获取当前文件所在目录的路径，并拼接images子目录路径
img_dir = Path(__file__).parent / "images"

def bonfire_dance(images: list[BuildImage], texts, args):
    user_img = images[0].convert("RGBA")  # 原始用户头像
    
    # 初始化帧列表，用于存储每一帧图像
    frames: list[IMG] = []

    positions = [
        (167, 56), (167, 56), (167, 56), (167, 56), (139, 59),  # 1-5
        (139, 59), (139, 59), (129, 82), (111, 68), (111, 68),  # 6-10
        (111, 68), (111, 68), (84, 61), (84, 61), (72, 95),  # 11-15
        (72, 95), (72, 95), (69, 101), (69, 101), (63, 107),  # 16-20
        (63, 107), (60, 122), (60, 122), (60, 122), (62, 156),  # 21-25
        (62, 156), (63, 177), (63, 177), (63, 177), (66, 170),  # 26-30
        (66, 170), (66, 170), (63, 206), (63, 206), (93, 245),  # 31-35
        (93, 245), (136, 267), (136, 267), (136, 267), (154, 261),  # 36-40
        (154, 261), (184, 259), (184, 259), (200, 285), (200, 285),  # 41-45
        (200, 285), (194, 229), (194, 229), (196, 225), (196, 225),  # 46-50
        (196, 225), (199, 286), (199, 286), (194, 230), (195, 230),  # 51-55
        (195, 230), (195, 224), (195, 224), (200, 286), (200, 286),  # 56-60
        (228, 275),   # 61
    ]

    # 定义每一帧的头像尺寸 (width, height)
    sizes = [
    (110, 110), (110, 110), (110, 110), (110, 110), (110, 110),  # 1-5
    (110, 110), (110, 110), (110, 110), (110, 110), (110, 110),  # 6-10
    (110, 110), (110, 110), (110, 110), (110, 110), (110, 110),  # 11-15
    (110, 110), (110, 110), (110, 110), (110, 110), (110, 110),  # 16-20
    (110, 110), (110, 110), (110, 110), (110, 110), (110, 110),  # 21-25
    (110, 110), (110, 110), (110, 110), (110, 110), (110, 110),  # 26-30
    (110, 110), (110, 110), (126, 126), (126, 126), (126, 126),  # 31-35
    (126, 126), (126, 126), (126, 126), (126, 126), (126, 126),  # 36-40
    (126, 126), (126, 126), (126, 126), (126, 126), (126, 126),  # 41-45
    (126, 126), (126, 126), (126, 126), (126, 126), (126, 126),  # 46-50
    (126, 126), (126, 126), (126, 126), (126, 126), (126, 126),  # 51-55
    (126, 126), (126, 126), (126, 126), (126, 126), (126, 126),  # 56-60
    (126, 126),   # 61
    ]

    # 处理所有帧
    for i in range(61):
        frame_num = (i % 61) + 1
        frame = BuildImage.open(img_dir / f"{frame_num}.png").convert("RGBA")
        
        # 根据当前帧索引获取对应的头像尺寸
        width, height = sizes[i]
        user_head = user_img.resize((width, height))
        
        # 创建一个新的图像，首先粘贴用户头像作为背景
        new_frame = BuildImage.new("RGBA", frame.size)
        new_frame.paste(user_head, positions[i], alpha=True)
        
        # 然后将原始帧内容粘贴到上面
        new_frame.paste(frame, (0, 0), alpha=True)
        
        frames.append(new_frame.image)

    # 将所有帧保存为GIF，帧间隔为0.04秒
    return save_gif(frames, 0.04)

add_meme(
    "bonfire_dance",  # 模板的唯一标识符
    bonfire_dance,  # 处理函数
    min_images=1,  # 需要的最小图片数量
    max_images=1,  # 需要的最大图片数量
    keywords=["篝火舞","圈舞"],  # 搜索关键词
    date_created=datetime(2025, 9, 27),  # 创建日期
    date_modified=datetime(2025, 9, 27),  # 修改日期
)